---
import Layout from "@/layouts/Layout.astro"
import AgeHistogram from "@/components/AgeHistogram.astro"

const links = [
	// { href: "#model-performance", text: "Model Performance" },
	// { href: "#chat-with-the-llm", text: "Chat with the LLM" },
	{ href: "#dataset", text: "Dataset" },
	{ href: "#models", text: "Models & LLM" },
	{ href: "#games", text: "Interactive Games" },
]

const models = [
	{
		hideInCards: true,
		name: "Baseline (Mean Age Model)",
		color: "purple",
		mae: 6.45,
		r2: "0.0000",
		yearsPercent: 41.5,
	},
	{
		name: "Simple Model",
		color: "purple",
		mae: 5.22,
		r2: 0.1649,
		yearsPercent: 61.1,
	},
	{
		name: "K-fold Model",
		color: "purple",
		mae: 5.23,
		r2: 0.1613,
		yearsPercent: 60.8,
	},
	{
		name: "Enhanced Simple Model",
		color: "green",
		mae: "5.20",
		r2: 0.1843,
		yearsPercent: 59.8,
	},
	{
		name: "Enhanced K-fold Model",
		color: "purple",
		mae: 5.23,
		r2: 0.1661,
		yearsPercent: "61.0",
	},
	{
		name: "LLM-Based Model",
		color: "purple",
		mae: 6.75,
		r2: 0.1121,
		yearsPercent: "48.00",
	},
]

const initialProfile = {
	gender: "-",
	lf_want: "-",
	d_religion_type: "-",
	d_drugs: "-",
	q20930: "-",
	q35: "-",
	q358077: "-",
	q179268: "-",
	q41: "-",
	q44639: "-",
	q41953: "-",
	q35660: "-",
	q16053: "-",
	q9688: "-",
	d_age: "-",
	enhanced_predicted_age: "-",
}
---

<Layout>
	<main>
		<div
			style="background: linear-gradient(180.00deg, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 1) 100%), linear-gradient(90deg, var(--color-peach), var(--color-pink) 100%);"
		>
			<section class="pt-36 pb-52">
				<h1 class="max-w-4xl mx-auto">
					What does your dating profile say about your age?
				</h1>
				<p class="text-lg max-w-2xl">
					We dug through, experimented with, and analyzed data from
					OkCupid for this final project. Experience the data for
					yourself below!
				</p>
				<nav class="pill mt-24 max-w-none w-fit">
					<ul class="font-light flex justify-center gap-6">
						{
							links.map((link) => (
								<li class="mb-0">
									<a href={link.href}>{link.text}</a>
								</li>
							))
						}
					</ul>
				</nav>
			</section>
		</div>
		<section
			id="dataset"
			class="pt-24 pb-36"
		>
			<h2>About the Dataset</h2>
			<section class="flex gap-16 items-center mt-10 mx-auto">
				<div class="w-1/2">
					<img
						src="/datafolder.png"
						class="card card--peach bg-white"
					/>
				</div>
				<div class="w-1/2">
					<p>
						We used a set of user profiles and survey responses
						scraped from the OkCupid dating platform in 2015-2016.
						It contains approximately 60,000 user records with over
						2600 unique survey questions. The data is ~1GB in size
						and structured in CSV format across multiple files: user
						profiles containing demographics, personality traits,
						preferences and question answer options, and a question
						file with survey question text and answer options.
					</p>
					<div class="mt-10">
						<!-- https://mega.nz/#F!QIpXkL4Q!b3QXepE6tgyZ3zDhWbv1eg -->
						<a
							href="https://mega.nz/folder/ygAkFIqC#030zFZqWSmO89uT0uhWSMQ"
							class="button"
							target="_blank"
						>
							View Dataset
						</a>
					</div>
				</div>
			</section>
		</section>
		<section class="pt-20 pb-36">
			<h2>Data Quality Checks</h2>
			<p class="max-w-4xl">
				Before developing predictive models, we conducted essential
				exploratory data analysis to understand our dataset's
				characteristics and validate our assumptions about the user
				population.
			</p>
			<section class="flex gap-16 items-center mt-10 card card--pink">
				<div class="w-1/2">
					<h3>Age Distribution</h3>
					<p>
						We plotted a histogram of user ages to verify that the
						age distribution makes sense for an online dating
						platform. As we hypothesized, most users fall on the
						younger side, around 20-40 years of age, and there are
						few users above 60 or below 18. This is a useful reality
						check because it helps ensure that the age data is
						reasonable and free from obvious errors (such as
						implausibly high or low ages), which could otherwise
						distort our predictive model.
					</p>
				</div>
				<div class="w-1/2">
					<AgeHistogram />
				</div>
			</section>
			<section class="flex gap-16 items-center mt-10 card card--pink">
				<div class="w-1/2">
					<h3>Sex Drive Distribution</h3>
					<p>
						For another sanity check we compared sex drive to the
						question “Regardless of future plans, what's more
						interesting to you right now?” (Love/Sex). In the graph
						we show the people in the top 20% by sex drive, and in
						all bins in the histogram the preference is for sex,
						growing much more clear as the sex drive rises! Very
						fitting for users with the highest sex drive.
					</p>
				</div>
				<div class="w-1/2"></div>
			</section>
		</section>
		<!-- TODO: SECTION: Data Insights / Demographics -->
		<section
			id="models"
			class="pt-20 pb-36"
		>
			<h2>Model Performance Comparisons</h2>
			<p class="max-w-4xl">
				Our approach systematically explores four distinct neural
				network architectures, progressing from simple baseline models
				to sophisticated ensemble methods with advanced feature
				engineering.
			</p>
			<section class="mt-10 grid grid-cols-3 gap-6">
				{
					models.map(
						(model) =>
							!model.hideInCards && (
								<div class={`card card--${model.color}`}>
									<h3>{model.name}</h3>
									<table>
										<thead>
											<tr>
												<td>MAE</td>
												<td>
													R<sup>2</sup>
												</td>
												<td>&plusmn; 5 years</td>
											</tr>
										</thead>
										<tbody>
											<tr>
												<td class="pb-0">
													{model.mae}
												</td>
												<td class="pb-0">{model.r2}</td>
												<td class="pb-0">
													{model.yearsPercent}%
												</td>
											</tr>
										</tbody>
									</table>
								</div>
							)
					)
				}
			</section>
			<!-- <section class="mt-10">
				<table>
					<thead>
						<tr class="font-semibold">
							<td>Model</td>
							<td>MAE</td>
							<td>
								R<sup>2</sup>
							</td>
							<td>&plusmn; 5 years</td>
						</tr>
					</thead>
					<tbody>
						{
							models.map((model) => (
								<tr>
									<td>{model.name}</td>
									<td>{model.mae}</td>
									<td>{model.r2}</td>
									<td>{model.yearsPercent}%</td>
								</tr>
							))
						}
					</tbody>
				</table>
			</section> -->
		</section>
		<!-- <section class="pt-20 pb-36">
			<h2>Can Our Models Guess Your Age?</h2>
			<p>Something goes here.</p>
			<div class="grid grid-cols-3 gap-6 mt-10"></div>
		</section> -->
		<section
			id="games"
			class="pt-20 pb-36"
		>
			<h2>Beat the Models!</h2>
			<p>
				Are you better at guessing ages than our model? Play this game
				to find out!
			</p>
			<section class="flex gap-12 mt-10">
				<div class="w-2/3">
					<div
						class="profile rounded-3xl p-6"
						style="background: linear-gradient(90deg, var(--color-peach), var(--color-pink) 100%)"
					>
						<h3>User Profile</h3>
						<p id="gender">
							{initialProfile.gender}
							<i>interested in</i>
							{initialProfile.lf_want}
						</p>
						<p
							id="religion"
							style="display: none;"
						>
							<span>Religion:</span>
							{initialProfile.d_religion_type}
						</p>
						<p id="drugs">
							<span>Drug use:</span>
							{initialProfile.d_drugs}
						</p>
						<p id="selfConfidence">
							<span>Self-confidence:</span>
							{initialProfile.q20930}
						</p>
						<p id="loveOrSex">
							<span>
								Regardless of future plans, what's more
								interesting to you right now, love or sex?
							</span>
							{initialProfile.q35}
						</p>
						<p id="messy">
							<span>
								Could you date someone who was really messy?
							</span>
							{initialProfile.q358077}
						</p>
						<p id="veg">
							<span>Are you either vegetarian or vegan?</span>
							{initialProfile.q179268}
						</p>
						<p id="god">
							<span>
								How important is religion/God in your life?
							</span>
							{initialProfile.q41}
						</p>
						<p id="scary">
							<span>Do you like scary movies?</span>
							{initialProfile.q44639}
						</p>
						<p id="relationshipLength">
							<span>
								How long do you want your next relationship to
								last?
							</span>
							{initialProfile.q41953}
						</p>
						<p id="openFeelings">
							<span
								>How often are you open with your feelings?</span
							>
							{initialProfile.q35660}
						</p>
						<p id="meetPerson">
							<span>
								How willing are you to meet someone from OkCupid
								in person?
							</span>
							{initialProfile.q16053}
						</p>
						<p id="drugsDate">
							<span>Could you date someone who does drugs?</span>
							{initialProfile.q9688}
						</p>
					</div>
				</div>
				<div class="w-1/3 flex flex-col gap-6">
					<!-- Your Guess Input -->
					<div class="card card--pink text-center">
						<h4>Your Guess</h4>
						<input
							id="user-guess"
							type="number"
							min="18"
							class="text-2xl text-center w-full mb-2 border rounded-full py-3"
						/>
						<button
							id="submit-guess"
							class="button w-full mt-2 cursor-pointer"
							data-real-age={initialProfile.d_age}
							data-enhanced-age={initialProfile.enhanced_predicted_age}
						>
							Submit Guess
						</button>
					</div>

					<!-- TODO: SET TO ACTUAL AGE -->
					<div
						id="model-guess-card"
						class="card card--pink text-center hidden"
					>
						<h4>Our Model's Guess</h4>
						<p
							id="model-age"
							class="text-4xl mb-0"
						>
							{initialProfile.enhanced_predicted_age}
						</p>
					</div>

					<div
						id="real-age-card"
						class="card card--green text-center hidden"
					>
						<h4>Real Age</h4>
						<p
							id="real-age"
							class="text-4xl mb-0"
						>
							{initialProfile.d_age}
						</p>
					</div>

					<div
						id="feedback-message"
						class="text-center mt-2 text-lg font-semibold hidden"
					>
					</div>

					<button
						onclick="fetchRandomProfile(true)"
						id="play-again"
						class="button text-center mt-4 hidden"
					>
						Play Again
					</button>
				</div>
			</section>
			<!-- <div class="mx-auto max-w-screen-md flex items-center gap-6">
				<div>Prev</div>
				<div
					class="w-full bg-white relative rounded-3xl border-gradient-1 p-6 mt-12"
				>
					<p>Some question goes here.</p>
					<ul class="list-disc ml-6">
						<li>Answer choice</li>
						<li>Another answer choice</li>
						<li>Third answer choice</li>
						<li>Last answer choice</li>
					</ul>
				</div>
				<div>Next</div>
			</div> -->
		</section>
		<!-- <section
			id="chat-with-the-llm"
			class="pt-20 pb-36"
		>
			<h2>Chat with the LLM</h2>
			<p>Does it beat our models? Take a turn and see!</p>
			<div
				class="bg-white relative rounded-3xl border-gradient-1 p-6 mt-12 h-screen max-h-[700px]"
			>
				<div class="pill absolute bottom-16 left-6 right-6">
					<p class="mb-0">Type something...</p>
				</div>
			</div>
		</section> -->
	</main>
	<footer class="bg-black text-white p-6 pt-8">
		<section>
			<p>
				Project by <a
					href="https://www.linkedin.com/in/amit-avnon-0b83b3316"
					target="_blank"
				>
					Amit Avnon
				</a>, <a
					href="https://www.linkedin.com/in/cathzchen/"
					target="_blank"
				>
					Catherine Chen
				</a>, and <a
					href="https://www.linkedin.com/in/davidruppin/"
					target="_blank"
				>
					David Ruppin
				</a>.
			</p>
		</section>
	</footer>
</Layout>

<script is:inline>
	async function fetchRandomProfile(scrollUp = false) {
		try {
			if (scrollUp) {
				const target = document.getElementById("games")
				const y = target.offsetTop
				window.scrollTo({ top: y, behavior: "smooth" }) // smooth scroll
			}

			const res = await fetch("/api/random-profile")
			const profile = await res.json()

			// Update guess data attributes
			const submitBtn = document.getElementById("submit-guess")
			submitBtn.dataset.realAge = profile.d_age
			submitBtn.dataset.enhancedAge = profile.enhanced_predicted_age

			// Update hidden cards
			document.getElementById("real-age").textContent = profile.d_age
			document.getElementById("model-age").textContent =
				profile.enhanced_predicted_age

			// Update other DOM elements for the profile
			document.getElementById("gender").innerHTML =
				`${profile.gender} <i>interested in</i> ${profile.lf_want}`
			document.getElementById("drugs").innerHTML =
				`<span>Drug use:</span> ${profile.d_drugs}`
			document.getElementById("selfConfidence").innerHTML =
				`<span>Self-confidence:</span> ${profile.q20930}`
			document.getElementById("loveOrSex").innerHTML =
				`<span>Regardless of future plans, what's more interesting to you right now, love or sex?</span> ${profile.q35}`
			document.getElementById("messy").innerHTML =
				`<span>Could you date someone who was really messy?</span> ${profile.q358077}`
			document.getElementById("veg").innerHTML =
				`<span>Are you either vegetarian or vegan?</span> ${profile.q179268}`
			document.getElementById("god").innerHTML =
				`<span>How important is religion/God in your life?</span> ${profile.q41}`
			document.getElementById("scary").innerHTML =
				`<span>Do you like scary movies?</span> ${profile.q44639}`
			document.getElementById("relationshipLength").innerHTML =
				`<span>How long do you want your next relationship to last?</span> ${profile.q41953}`
			document.getElementById("openFeelings").innerHTML =
				`<span>How often are you open with your feelings?</span> ${profile.q35660}`
			document.getElementById("meetPerson").innerHTML =
				`<span>How willing are you to meet someone from OkCupid in person?</span> ${profile.q16053}`
			document.getElementById("drugsDate").innerHTML =
				`<span>Could you date someone who does drugs?</span> ${profile.q9688}`

			// Show/hide religion
			const religionEl = document.getElementById("religion")
			if (profile.d_religion_type && profile.d_religion_type !== "-") {
				religionEl.style.display = "block"
				religionEl.innerHTML = `<span>Religion:</span> ${profile.d_religion_type}`
			} else {
				religionEl.style.display = "none"
			}

			// Reset hidden cards and feedback for new profile
			document.getElementById("real-age-card").classList.add("hidden")
			document.getElementById("model-guess-card").classList.add("hidden")
			document.getElementById("feedback-message").classList.add("hidden")
			document.getElementById("play-again").classList.add("hidden")

			// Clear input
			document.getElementById("user-guess").value = ""
		} catch (err) {
			console.error("Failed to fetch profile:", err)
		}
	}

	document
		.getElementById("reloadBtn")
		?.addEventListener("click", fetchRandomProfile)

	// Optional: fetch first profile on load
	fetchRandomProfile()
</script>

<script is:inline>
	const submitBtn = document.getElementById("submit-guess")
	const guessInput = document.getElementById("user-guess")
	const realCard = document.getElementById("real-age-card")
	const modelCard = document.getElementById("model-guess-card")
	const feedbackMsg = document.getElementById("feedback-message")
	const playAgainBtn = document.getElementById("play-again")

	submitBtn.addEventListener("click", () => {
		const userGuess = Number(guessInput.value)
		const realAge = Number(submitBtn.dataset.realAge)
		const enhancedAge = Number(submitBtn.dataset.enhancedAge)

		if (isNaN(userGuess)) return

		// Calculate differences
		const userDiff = Math.abs(userGuess - realAge)
		const modelDiff = Math.abs(enhancedAge - realAge)

		let feedback = ""

		// Base feedback on closeness to the real age
		if (userDiff === 0) {
			feedback = "Perfect! 🎯"
		} else if (userDiff <= 5) {
			feedback = "So close! 🔥"
		} else {
			feedback = "Better luck next time! 😅"
		}

		// Add relative feedback vs. the model
		if (modelDiff === 0 && userDiff !== 0) {
			feedback += " The model nailed it, but you'll get it next time!"
		} else if (userDiff < modelDiff) {
			feedback += " You beat the model! 🏆"
		} else if (userDiff > modelDiff) {
			feedback += " The model was closer. 🤖"
		} else {
			feedback += " You and the model tied! ⚖️"
		}

		// Reveal cards and message
		realCard.classList.remove("hidden")
		modelCard.classList.remove("hidden")
		feedbackMsg.textContent = feedback
		feedbackMsg.classList.remove("hidden")
		playAgainBtn.classList.remove("hidden")

		// Disable input/button
		guessInput.disabled = true
		submitBtn.disabled = true

		const target = document.getElementById("model-guess-card")
		const y = target.offsetTop
		window.scrollTo({ top: y, behavior: "smooth" }) // smooth scroll
	})

	playAgainBtn.addEventListener("click", () => {
		// Reset everything
		guessInput.value = ""
		guessInput.disabled = false
		submitBtn.disabled = false
		realCard.classList.add("hidden")
		modelCard.classList.add("hidden")
		feedbackMsg.classList.add("hidden")
		playAgainBtn.classList.add("hidden")
	})
</script>
